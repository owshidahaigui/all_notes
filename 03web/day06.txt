一、运算符
	1.赋值运算符
	2.算术运算符
	3.复合运算符
	4.自增/自减
	5.关系运算符
		"hello">"abc"
		"10">2 //10>2
		"10">"2"//"1">"2"->false
		"abc">10//NaN>10->fasle
	6.逻辑运算
		逻辑运算用于表示表达式之间的关系，结果永远为布尔值
		1)逻辑与 &&
			全1则1，只有表达式全部为true，最终结果才为true
		2)逻辑或 ||
			有1则1，只要有一个表达式成立，最终结果就为true
			练习：
				定义变量表示年份，判断是否是闰年
				能被4整除并且不能被100整除
				能被400整除
		3)逻辑非	!
			对布尔结果取反
			例：!5
					!year
	7.三目运算符
		语法：表达式1 ? 表达式2 : 表达式3;
		使用：判断表达式1是否成立，成立的话执行并返回表达式2的结果，不成立执行并返回表达式3的结果
		练习：
			1）分数判断
				接收用户输入的分数，判断区间段
				>= 90
				80~90
				60~80
				<60
			2）身体指数
				接收用户输入的身高（m）和体重(kg)计算身体指数
				bmi = 体重/(身高*身高)
				>=24 月半
				18.5 ~ 24 健康
				<18.5	该增肥了

二、流程控制
	1.控制代码的执行顺序和执行次数
	2.分类：
		1）顺序结构，从上到下依次执行
		2）选择结构，根据条件是否成立，选择执行某一段代码
		3）循环结构，根据条件是否成立，选择是否重复执行某段代码
	3.选择结构
		1）if语句
			1.基本结构
				if(条件表达式){
					条件成立时执行
				}
			2.if-else语句
				if(条件){
					条件成立时执行
				}else{
					条件不成立时执行
				}
			3.多重分支if-else if
				if(条件1){
					条件1成立时执行
				}else if(条件2){
					条件2成立时执行
				}
				...
				else{
					条件n不成立时执行
				}			
		2）switch语句
			用于值的全等匹配
			语法：
				switch(变量){
					case 值1:
						匹配全等之后执行的代码段
						break;//结束匹配
					case 值2:
						匹配全等后执行
						break;
					...
					default:
						所有case都不匹配时执行的默认操作
						break;
				}
			特殊：
				1）break关键字可以省略，一旦省略，会从当前匹配到的case开始向后执行所有的代码语句。直至碰到break关键字结束匹配或执行至结束
				2）多个case共用代码段
					case 值1:
					case 值2:
						//任一case匹配全等后执行的操作
						break;
			练习：
				接收用户输入年，月，日，计算当日是该年的第几天
	4.循环结构
		控制代码的重复执行。
		1）while循环
			语法：
				定义循环变量
				while(循环条件){
					条件成立时执行，循环体
					更新循环变量
				}

		2）do-while循环
			语法：
				定义循环变量
				do{
					循环体
					更新循环变量
				}while(循环条件)
			与while循环的区别：
				while循环先判断条件，成立时执行循环体；
				do-while循环先执行循环体，在判断条件。不管条件是否成立，循环体至少走一次
			练习：
				循环接收用户输入，输入"exit"表示退出，否则就在控制台中打印输入内容
		3）for循环
			语法：
				for(定义变量;循环条件;更新变量){
					循环体
				}
		4）循环控制
			break:跳出循环
			continue：结束本次循环，开始下一次循环
		5）循环嵌套
			在循环中嵌套添加其他的循环
			练习：
				控制台输出乘法表
				控制台打印图案
					*
					**
					***
					****
					*****
三、函数
	1.函数用于保存一段待执行的代码，或者封装某个功能。
	2.语法：
		1）函数声明
			function 函数名(参数列表){
				函数体
				return 返回值
			}
		2）函数调用
			函数名(参数列表)
		js函数中可以任意传入参数的个数，不过会影响函数结果，传多了，根据位置传参，多余的参数没用，传参少了，少了的函数内的值为undefined.  return 也可以和接收的变量个数不一样，一般接收后面的数据，函数默认的返回值为undefined,类似变量未赋值
	3.作用域
		全局作用域和函数作用域
		1）全局变量
			在程序任意位置都能访问。
			1.函数外部定义的变量都是全局变量
			2.函数内部省略var创建变量，一律为全局变量
		2）局部变量
			在函数体中使用var关键字声明的变量一律为局部变量，只能在当前函数体中使用，外界无法访问
	作业：
		接收用户输入的年，月，日，判断当日是星期几
		已知：1900.1.1/1990.1.1是星期一
		附加：
			要求主功能使用函数封装，使用按钮点击调用；
			闰年判断封装函数
			例：
				<button onclick="fn()"></button>
		






