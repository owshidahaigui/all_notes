一、BOM
	1.window对象的方法
		间歇调用:
			var timer = setInterval(function,interval);
			clearInterval(timer);
		超时调用：
			var timer = setTimeout(function,timeout);
			clearTimeout(timer);
		弹框：
			alert("")
			prompt("")
			confirm("")
		窗口的打开和关闭:
			window.open("URL")
			window.close()
	2.window对象的属性
		1）history
			提供操作当前窗口历史记录的方法
			属性：length
				保存当前窗口访问过的历史记录数量
			方法：
				back()返回上一个历史记录
				forward()前进下一个历史记录
				go(n)正值表示前进n条历史记录，负值表示 后退n条历史记录
			使用：
				1.超链接修改地址栏中URL，会增加历史记录
				2.前进和后退按钮不会增加历史记录，只是指针的移动
		2）location
			保存当前窗口的地址栏信息
			属性：href
				可读可写，读取或设置当前窗口的URL
			方法：reload(false)
				重载页面，参数默认是false表示优先从缓存中加载，设置true表示强制从服务器根目录中请求
		3）navigator/screen(了解)
		4）document（见DOM）
二、DOM节点操作
	1.文档对象模型，提供操作HTML文档的方法。核心对象为document对象。
	2.节点对象。JS对HTML文档中的标签，文本，属性甚至注释都封装成对象，提供操作的方法。称为节点对象。分为：
		元素节点（标签）
		文本节点（文本内容）
		属性节点（标签属性）
	3.获取元素节点
		1）根据标签名获取节点列表
			document.getElementsByTagName("h1")
		2）根据类名（class属性值）获取节点列表
			document.getElementsByClassName("c1")
		3）根据name属性值获取节点列表
			document.getElementsByName("")
		4）根据id属性值获取元素
			document.getElementById("")
	4.操作元素内容
		元素节点提供三个属性，操作标签内容或值
		1）innerHTML
			读取或设置元素节点的内容，可以识别标签语法
		2）innerText
			读取或设置元素节点的内容，不能识别标签语法
		3）value
			读取或设置表单控件的值
	5.操作元素属性
		1）标签属性都是元素节点对象的属性，使用点语法直接访问.注意操作类名时，需要将class更名为className.
			h1.className = "c1 c2";
			h1.id = "";
			h1.style = "";
		2）元素对象提供相关的方法操作标签属性
			setAttribute("attrName","value")
			getAttribute("attrName");
			removeAttribute("attrName")
	6.操作元素样式
		1）通过操作id和class属性，对应选择器的样式
		2）操作行内样式，操作style属性.访问style属性获取样式表对象，包含所有CSS的属性，可以使用点语法操作。所有出现连接符的CSS属性一律更改为驼峰标识。
			h1.style.color = ""
			h1.style.textAlign = "";
	7.节点的层次属性
		1）获取父元素
			parentNode
		2）获取子元素列表
			childNodes:获取所有子节点，包含文本节点
			children：获取所有的子元素，不包含文本节点
		3）获取下一个兄弟节点
			nextSibling
			nextElementSibling获取下一个元素兄弟节点
		4）获取上一个兄弟节点
			previousSibling
			previousElementSibling获取前一个元素兄弟节点
		5）获取属性节点的列表
			attributes
	8.节点的创建，添加和移除
		1）创建节点
			var h1 = document.createElement("h1");
		2）节点添加
			节点的添加和移除只能由父元素操作
			1.添加在父元素的末尾
				parentNode.appendChild(elem);
			2.指定位置添加
				parentNode.insertBefore(new,old);
				在已有节点之前插入新节点
		3）移除节点
			parentNode.removeChild(elem);
三、DOM事件处理
	1.介绍
		事件：指的是用户的行为或元素的状态。
		事件处理：元素监听事件，并在事件发生后自动执行相关的操作。
		例：<button onclick="alert()"></button>
	2.事件分类
		1）鼠标事件
			onclick
			ondblclick
			onmouseover(鼠标移入)
			onmouseout(鼠标移出)
			onmousemove(鼠标移动)
			...
		2）键盘事件(了解)
			onkeydown(键盘按键被按下)
			onkeyup(按键抬起)
			onkeypress(字符按键被按下)
		3）文档，窗口或元素加载完毕
			onload

	3.事件绑定方式
		1）内联绑定：将事件名称作为标签属性直接绑定
		2）动态绑定：为元素节点绑定事件
			btn.onclick = function (){};
	
	作业：
		轮播图
			1.控制元素隐藏与显示
			2.动态修改图片路径
		







