李文华
liwenhua@tedu.cn


今日目标：
(1)匿名函数
(2)对象
(3)数组对象
(4)字符串对象


1.面试题：如何自学一门编程语言？
(1)了解背景：诞生、演变、特点、适用领域
(2)搭建环境：HelloWorld
(3)变量常量
(4)数据类型
(5)运算符
(6)逻辑结构
(7)通用小程序
(8)函数和对象
(9)官方函数和对象
(10)第三方函数/对象/库/框架

2.复习：函数
	定义函数：function 函数名(形参列表){
							函数主体
							return 返回值
						}
	调用函数：var result = 函数名(实参列表);
	函数难点：确定函数的合理边界？

	练习：点击按钮，运行一个累加计算函数：
				recursiveAdd()
				弹出对话框，接收两个整型输入，
				弹出它们的累加和
	分析：输入 + 运算 + 输出


3.匿名函数
  定义：没有名称的函数
  提示：函数的本质是对象，函数名的本质是对象的引用

	var age = 20;							//age是变量名
	function work(){ }				//work就是变量名
	work();
  var work = function(){ }	//work就是变量名
	work();
	-------------------------------------------
	function(){		//直接这样写是语法错误
	}
  -------------------------------------------
	“有名函数”的致命问题：
	JS中所有的全局变量/函数都会自动成为window对象
	的成员，可能出现“覆盖window原有成员”或者“不同
	开发者创建的同名函数互相覆盖”这样的问题——称为
	“window对象的污染”

	解决办法：匿名函数
	匿名函数的两种用法：
	(1)匿名自调函数：
		(function(形参){
			函数主体
		})(实参);
		练习：创建一个匿名自调函数，输出1到100的
		累加和
	(2)匿名回调(Callback)函数：
		在指定的事件(单击/时间到了)发生时由JS解释器
		自动调用的函数
		练习：创建一个定时器任务，
		页面即将跳转...3
		页面即将跳转...2
		页面即将跳转...1
		页面即将跳转...0
		consoloe.log('页面已跳转')
		扩展知识：定时器任务  setInterval(cb, time)
		
4.JS中的对象
  对象：是一组数据(属性)和数据操作(方法)的集合
	Object = Field + Method
	JS中创建对象有很多种方法，
	最常用的是“对象直接量法”，语法：
	var 实例名 = {
		成员名: 值,
		成员名: 值,
		....
	}
	例如：
	var user2 = {
		userName: 'dingding',	
		age: 20,
		isOnline: true,
		login: function(){ console.log(this.age) },
		logout: function(){}
	};
	练习：创建一个对象表示一个矩形，
	包含成员属性：width、height，
	以及成员方法：getSize()、getPerimeter()
	输出该对象的周长和面积

	练习：创建一个对象表示一个学生，
	包含成员属性：stuName、chinese、math、english
	以及成员方法：getTotal()、getAverage()
	输出该学生的总分和平均分


5.JS中的对象的分类：
  (1)ES原生对象(百度搜MDN)
		Array、String、Math、...总共十几个
	(2)宿主对象(由浏览器提供的对象)
		window、document、location、...等数百个 
	(3)用户自定义对象
		var stu = { math: 80, ... }


6.ES原生对象 —— Array
  数组：是一种特殊的对象，其中可以保存多个数据
	
	1)创建一个新的数组：
	var 数组变量名 = [];  //长度为0的数组
	var 数组变量名 = new Array(); //长度为0的数组
	var 数组变量名 = [值, 值, ...];
	var 数组变量名 = new Array(值, 值, ...);
	var 数组变量名 = new Array(100);//长度为100的数组
	练习：创建一个数组，保存5个书籍的单价
	练习：创建一个数组，保存4个用户的昵称
	练习：创建一个数组，保存6个商品的“是否特价”

	2)获取数组的长度：
	数组变量名.length

	3)修改数组中的某个数据：
	数组变量名[下标] = 新值;

	4)读取数组中的某个数据：
	console.log( 数组变量名[下标] );

	5)在数组尾部添加一个新的数据：
	数组变量名[数组变量名.length] = 新值;

	练习：创建一个数组，保存三个学生的高考成绩；
	试着依次输出每个成绩；
	依次给每个成绩+5分；
	试着依次输出每个成绩；
	在数组尾部添加两个新的成绩；
	试着依次输出每个成绩；

	6)遍历数组中的每个元素
	for(var i=0; i<数组.length; i++){
		console.log( 数组[i] );
	}
	---------------------------------
	数组变量名.forEach( function(val, index){} )

	7)在数组末尾添加/删除元素 —— 栈式操作
	数组.push(新元素); //入栈，在数组尾部添加新元素
	var 删除的元素=数组.pop();//出栈，在数组尾部删除元素

	8)在数组头部添加/删除元素
	数组.unshift(新元素); //在数组头部添加新元素
	var 删除的元素=数组.shift();//在数组头部删除元素

	9)拼接数组中的每个元素
	var arr = [1, 1, 0, 0];
	var result = arr.join('-');  //'1-1-0-0'
	var result = arr.join('');	 //'1100'


课后任务：
(1)把十进制数组123转换为二进制表示的字符串
(2)把十进制数组123转换为八进制表示的字符串
(3)把多个用户的信息在一个HTML TABLE中呈现出来
  提示：每个用户都有若干数据，又有多个用户，
	表示方法有两种：
	1)数组的数组 —— 二维数组
		[
			[10, 'dingding', '男', '1990-1-1', true],
			[10, 'dingding', '男', '1990-1-1', true],
			[10, 'dingding', '男', '1990-1-1', true],
		]
	2)对象的数组
		[
			{uid:10, uname:'dingding', sex:'男', birthday:'1990-1-1', isOnline:true},
			{uid:10, uname:'dingding', sex:'男', birthday:'1990-1-1', isOnline:true},
			{uid:10, uname:'dingding', sex:'男', birthday:'1990-1-1', isOnline:true},
		]


